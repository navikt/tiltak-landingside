name: Bygg alle brancher. Deploy master branch

on: [push]

env:
  APP_IMAGE: ghcr.io/${{ github.repository }}:${{ github.sha }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GITHUB_REPOSITORY: ${{ github.repository }}

jobs:
  compile-test-and-build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v2

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Cache yarn-avhengigheter
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Installer avhengigheter (yarn ci)
        run: |
          yarn install --frozen-lockfile

      - name: Bygg (yarn run build)
        run: yarn run build

      - name: Bygg, tag og push Docker-image
        run: |
          echo ${GITHUB_TOKEN} | docker login ghcr.io -u ${GITHUB_REPOSITORY} --password-stdin
          docker build --tag ${APP_IMAGE} .
          docker push ${APP_IMAGE}

  deploy-to-dev-gcp:
    name: Deploy to dev-gcp
    if: github.ref == 'refs/heads/master'
    needs: compile-test-and-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          VAR: version=${{ env.APP_IMAGE }}
          RESOURCE: nais/dev-gcp.yaml
          PRINT_PAYLOAD: true

  deploy-to-prod-gcp:
    name: Deploy to prod-gcp
    if: github.ref == 'refs/heads/master'
    needs: compile-test-and-build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          VAR: version=${{ env.APP_IMAGE }}
          RESOURCE: nais/prod-gcp.yaml
          PRINT_PAYLOAD: true
